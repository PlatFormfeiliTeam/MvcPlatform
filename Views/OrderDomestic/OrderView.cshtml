@{
    ViewBag.Title = "OrderView";
    Layout = "~/Views/Shared/Empty.cshtml";
}
<link href="/js/Extjs42/resources/css/ext-all-neptune.css" rel="stylesheet" />
<script src="/js/Extjs42/bootstrap.js" type="text/javascript"></script>
<script src="/js/pan.js" type="text/javascript"></script>

<script src="/js/commondata.js"></script>
<script src="~/Views/OrderDomestic/method_view.js"></script>
<script src="~/Views/OrderDomestic/form_head.js"></script>
<script src="~/Views/OrderDomestic/form_import_view.js"></script>
<script src="~/Views/OrderDomestic/form_export_view.js"></script>
<link href="/css/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<script type="text/javascript">
    var formpanelhead, formpanelin, formpanelout, formpanelhead2, formpanelin2, formpanelout2;
    var ordercode = getQueryString("ORDERCODE");
    var role = getQueryString("role");
    var common_data_jydw = [], common_data_sbfs = [], common_data_sbgq = [], common_data_bgfs = [], common_data_bzzl = [], common_data_myfs = [];
    var cur_usr;//当前用户
    var busitypeid = getQueryString("busitypeid");
    // Ext.Loader.setConfig({ enabled: true });
    Ext.onReady(function () {
        //1 调取基础数据
        Ext.Ajax.request({
            url: "/Common/Ini_Base_Data?",
            params: { busitype: '国内' },
            success: function (response, opts) {
                var commondata = Ext.decode(response.responseText)
                common_data_jydw = commondata.jydw;//经营单位
                common_data_sbfs = commondata.sbfs;//申报方式
                common_data_sbgq = commondata.sbgq;//申报关区 进口口岸
                common_data_bgfs = commondata.bgfs;//报关方式
                common_data_bzzl = commondata.bzzl;//包装种类
                common_data_myfs = commondata.myfs;//贸易方式
                common_data_dzfwdw = commondata.dzfwdw;//单证服务单位
                form_head_ini();
                form_import_ini();
                form_export_ini();
                //2 加载表单数据
                Ext.Ajax.request({
                    url: "/OrderDomestic/loadform",
                    params: { ordercode: ordercode },
                    success: function (response, opts) {
                        var data = Ext.decode(response.responseText);
                        formpanelhead.getForm().setValues(data.data1.IETYPE ? data.data1 : data.data2);
                        repunitcode = data.data1.REPUNITCODE ? data.data1.REPUNITCODE : data.data2.REPUNITCODE;//初始化报关报检单位
                        inspunitcode = data.data1.INSPUNITCODE ? data.data1.INSPUNITCODE : data.data2.INSPUNITCODE;
                        formpanelin.getForm().setValues(data.data1);
                        form_control(data.data1, 1);
                        readonly_init(formpanelin, formpanelhead, 1);//设置控件只读
                        formpanelout.getForm().setValues(data.data2);
                        form_control(data.data2, 2);
                        readonly_init(formpanelout, formpanelhead, 2);//设置控件只读
                        var radioitems = [];
                        var bbar_html = '<div class="btn-group">';
                        if (data.data1.CODE) {
                            radioitems.push({
                                boxLabel: '原始订单进口', name: 'ordergroup', checked: data.data1.CODE == ordercode,
                                width: 140, inputValue: data.data1.CODE
                            });
                        }
                        if (data.data2.CODE) {
                            radioitems.push({
                                boxLabel: '原始订单出口', name: 'ordergroup', checked: data.data2.CODE == ordercode,
                                width: 140, inputValue: data.data2.CODE
                            });
                        }
                        if (data.data3.CODE) {
                            radioitems.push({
                                boxLabel: '关联订单进口', name: 'ordergroup', checked: data.data3.CODE == ordercode,
                                width: 140, inputValue: data.data3.CODE
                            });
                        }
                        if (data.data4.CODE) {
                            radioitems.push({
                                boxLabel: '关联订单出口', name: 'ordergroup', checked: data.data4.CODE == ordercode,
                                width: 140, inputValue: data.data4.CODE
                            });
                        }
                        var rg_ordercodes = Ext.create('Ext.form.RadioGroup', {
                            columns: 4,
                            items: radioitems,
                            listeners: {
                                change: function (rg, newValue, oldValue, eOpts) {
                                    if (rg.getChecked()[0].boxLabel == "原始订单进口" || rg.getChecked()[0].boxLabel == "关联订单进口") {
                                        document.getElementById("icon_in").style.backgroundColor = '#157fcc';
                                        document.getElementById("icon_out").style.backgroundColor = '#777';
                                        //如果是四单的情形还要进行表单数据切换
                                        busitypeid = 41;
                                    }
                                    else {
                                        busitypeid = 40;
                                        document.getElementById("icon_out").style.backgroundColor = '#157fcc';
                                        document.getElementById("icon_in").style.backgroundColor = '#777';
                                    }
                                    var actab = tabpanel.getActiveTab();
                                    if (actab.title == '订单跟踪') {
                                        Ext.getDom("trackIframe").src = "/Common/OrderTrack?ORDERCODE=" + newValue.ordergroup;
                                    }
                                    if (actab.title == '随附文件') {
                                        Ext.getDom("fileIframe").src = "/Common/FileConsult?ORDERCODE=" + newValue.ordergroup + "&BUSITYPE=" + busitypeid;
                                    }

                                    //保证载入跟踪信息及随附文件时传入的ordercode随订单类型改变的
                                    ordercode = newValue.ordergroup;
                                    store_declaration.load();//再次加载
                                }
                            }
                        })
                        //3 绘制报关单列表
                        var store_declaration = Ext.create('Ext.data.JsonStore', {
                            fields: ['ID', 'DECLARATIONCODE', 'GOODSNUM', 'GOODSNW', 'GOODSGW', 'SHEETNUM', 'BUSITYPE', 'TRADECODE', 'CUSTOMSSTATUS', 'COMMODITYNUM'],
                            proxy: {
                                type: 'ajax',
                                url: '/Common/LoadDeclaration',
                                reader: {
                                    root: 'rows',
                                    type: 'json'
                                }
                            },
                            autoLoad: true,
                            listeners: {
                                beforeload: function (store, options) {
                                    var new_params = {
                                        ORDERCODE: ordercode
                                    }
                                    Ext.apply(store.proxy.extraParams, new_params);
                                }
                            }
                        })
                        var panel_declaration = Ext.create('Ext.grid.Panel', {
                            store: store_declaration,
                            margin: '5 0',
                            minHeight: 150,
                            columns: [
                                { xtype: 'rownumberer', width: 30 },
                                { header: 'ID', dataIndex: 'ID', width: 80, hidden: true },
                                { header: '报关单号', dataIndex: 'DECLARATIONCODE', width: 160 },
                                { header: '业务类型', dataIndex: 'BUSITYPE', width: 100 },
                                { header: '贸易方式', dataIndex: 'TRADEMETHOD', width: 100 },
                                { header: '商品数量', dataIndex: 'NUMS', width: 70 },
                                { header: '件数', dataIndex: 'GOODSNUM', width: 50 },
                                { header: '毛重', dataIndex: 'GOODSGW', width: 100 },
                                { header: '净重', dataIndex: 'GOODSNW', width: 100 },
                                { header: '张数', dataIndex: 'SHEETNUM', width: 80 },
                                //{ header: '客户备注', dataIndex: 'CUSTOMERREMARK', width: 100 },
                               // { header: '客服备注', dataIndex: 'CSREMARK', width: 100 },
                                { header: '海关状态', dataIndex: 'CUSTOMSSTATUS', width: 100 }
                                //{ header: '状态时间', dataIndex: 'zhuangtaishijian', width: 100 },
                                //{ header: '删改单', dataIndex: 'shangaidan', flex: 1 }
                            ]
                        });
                        var panel1 = Ext.create('Ext.panel.Panel', {
                            border: 0,
                            margin: '20 20',
                            items: [formpanelhead, formpanelin, formpanelout, panel_declaration]
                        })

                        var tab_items = []
                        if (role == "enterprise") {
                            tab_items = [{ title: '委托信息', border: 0, items: [panel1] },
                                        { title: '随附文件', contentEl: 'fileIframe' }];
                        } else {
                            tab_items = [{ title: '委托信息', border: 0, items: [panel1] },
                                        { title: '订单跟踪', contentEl: 'trackIframe' },
                                        { title: '随附文件', contentEl: 'fileIframe' }];
                        }
                        var toolbar = Ext.create('Ext.toolbar.Toolbar', {
                            items: [rg_ordercodes]
                        })
                        var tabpanel = Ext.create('Ext.tab.Panel', {
                            border: 0,
                            items: tab_items,
                            region: 'center',
                            tbar: toolbar,
                            listeners: {
                                tabchange: function (tabPanel, newCard, oldCard, eOpts) {
                                    if (newCard.title == "随附文件") {
                                   if (role == "enterprise") {
                                            Ext.getDom("fileIframe").src = "/Common/FileConsult_E?ORDERCODE=" + ordercode + "&BUSITYPE=" + busitypeid;
                                        } else {
                                            Ext.getDom("fileIframe").src = "/Common/FileConsult?ORDERCODE=" + ordercode + "&BUSITYPE=" + busitypeid;
                                        }
                                    }
                                    if (newCard.title == "订单跟踪") {
                                        Ext.getDom("trackIframe").src = "/Common/OrderTrack?ORDERCODE=" + ordercode;
                                    }
                                }
                            }
                        });
                        var viewport = Ext.create('Ext.container.Viewport', {
                            layout: 'border',
                            items: [tabpanel]
                        })
                        if (rg_ordercodes.getChecked()[0].boxLabel == "原始订单进口" || rg_ordercodes.getChecked()[0].boxLabel == "关联订单进口") {
                            document.getElementById("icon_in").style.backgroundColor = '#157fcc';
                        }
                        else {
                            document.getElementById("icon_out").style.backgroundColor = '#157fcc';
                        }
                    }
                });
            }
        })
    })



</script>
<iframe id="trackIframe" width="100%" height="100%" name="mainContent" frameborder="no" border="0" marginwidth="0" marginheight="0"></iframe>
<iframe id="fileIframe" width="100%" height="100%" name="mainContent" frameborder="no" border="0" marginwidth="0" marginheight="0"></iframe>
