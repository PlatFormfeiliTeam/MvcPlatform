@{
    ViewBag.Title = "GoodsTrack";
    Layout = "~/Views/Shared/Empty.cshtml";
    string Version = System.Configuration.ConfigurationManager.AppSettings["Version"];
}
<link href="/js/Extjs42/resources/css/ext-all.css" rel="stylesheet" />
<script src="/js/Extjs42/bootstrap.js" type="text/javascript"></script>
<link href="/css/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<script src="/js/pan.js?t=@Version" type="text/javascript"></script>
<script src="/js/commondata.js?t=@Version"></script>
<style type="text/css">

    #menu {
        background-color: #d9e7f8;
        width:100%;
        height: 30px;
        padding-left:0px;
        padding-right:0px;
    }
    #menu li {
        float: left;
        width: 130px;
        list-style: none;
        height: 30px;
        padding-top: 5px;
        text-align: center;
    }
</style>
<script type="text/javascript">
    var  busitypeid,rowIndex;
    var common_data_sbgq, common_data_sbfs, common_data_myfs;
    var preUrl, nextUrl;
    var startrow = 0;
    var store_Trade;
    var currentPage; var pageSize, store_size, max_page;
   
    

    Ext.onReady(function () {
        busitypeid = getQueryString("busitypeid");
        var id = getQueryString("id");
        rowIndex = getQueryString("rowIndex");
        currentPage = getQueryString("currentPage");
        if (opener.Ext.getCmp('pgbar')) {
            pageSize = parseInt(opener.Ext.getCmp('pgbar').store.pageSize);
            store_size = parseInt(opener.Ext.getCmp('pgbar').store.data.length);
        }
        else {
            pageSize = parseInt(opener.store_Trade.pageSize);
            store_size = parseInt(opener.store_Trade.data.length);

        }
        
        
        var model_fields = ['ID', 'ENTRUSTTYPE', 'DECLSTATUS', 'INSPSTATUS', 'CODE', 'CUSNO', 'PORTCODE', 'TURNPRENO', 'SUBMITTIME',
                    'BUSIUNITNAME', 'BUSIUNITCODE', 'CONTRACTNO', 'TOTALNO', 'DIVIDENO', 'REPWAYID', 'GOODSNUM',
                    'GOODSGW', 'CUSTOMAREACODE', 'LAWFLAG', 'ISINVALID', 'BUSITYPE', 'PRINTSTATUS', 'STATUS', 'REPNO', 'ASSOCIATENO',
                   'CORRESPONDNO', 'FIRSTLADINGBILLNO', 'SECONDLADINGBILLNO', 'ARRIVEDNO', 'SUBMITUSERNAME', 'REPUNITNAME'];
        Ext.define('ORDERLIST', {
            extend: 'Ext.data.Model',
            fields: model_fields
        });
        store_Trade = Ext.create('Ext.data.JsonStore', {
            model: 'ORDERLIST',
            pageSize: pageSize
        });
        store_Trade.proxy = opener.gridpanel.store.getProxy();
        store_Trade.proxy.extraParams.start = pageSize * (parseInt(currentPage) - 1);;
        store_Trade.load(function (records, operation, success) {
            max_page = (store_Trade.totalCount % pageSize) == 0 ? parseInt(store_Trade.totalCount / pageSize) : parseInt(store_Trade.totalCount / pageSize) + 1;
        });
       


        var busitype = "";
        switch (busitypeid) {
            case "10":
                busitype = "空运出口";
                break;
            case "11":
                busitype = "空运进口";
                break;
            case "20":
                busitype = "海运出口";
                break;
            case "21":
                busitype = "海运进口";
                break;
            case "30":
                busitype = "陆运出口";
                break;
            case "31":
                busitype = "陆运进口";
                break;
            case "40-41":
                busitype = "国内";
                break;
            case "50-51":
                busitype = "特殊区域";
                break;
        }
        Ext.Ajax.request({
            url: "/Common/Ini_Base_Data",
            params: {
                busitype: busitype
            },
            success: function (response, opts) {
                var commondata = Ext.decode(response.responseText);
                common_data_sbgq = commondata.sbgq;//申报关区
                common_data_sbfs = commondata.sbfs;//申报方式
                common_data_myfs = commondata.myfs;//贸易方式
                        form_ini();
                        var items = [];
                        var paneltop_2 = Ext.create('Ext.panel.Panel', {
                            id:'paneltop_2',
                            border: 0,
                            region: 'center',
                            height: 430,
                            contentEl: 'content'
                        })
                        var paneltop_1 = Ext.create('Ext.panel.Panel', {
                            border: 10,
                            height: 30,
                            region: 'north',
                            contentEl: 'menu'

                        })
                        var panel_top = Ext.create('Ext.panel.Panel', {
                            id:'panel_top',
                            border: 0,
                            region: 'north',
                            items: [paneltop_1, paneltop_2]
                        })
                        items.push(panel_top);


                //查询直接调用过记录
                //start
                        var store_cx = Ext.create('Ext.data.JsonStore', {
                            fields: ['CODE', 'NAME'],
                            data: [{ "NAME": "订单编号", "CODE": "ddbh" }, { "NAME": "客户编号", "CODE": "khbh" }]
                        });
                        var item_combo = Ext.create('Ext.form.field.ComboBox', {
                            id: 'item_combo',
                            store: store_cx,
                            queryMode: 'local',
                            value: "ddbh",
                            displayField: 'NAME',
                            valueField: 'CODE'
                        });

                        var cx_value = Ext.create('Ext.form.field.Text', {
                            id: 'cx_value',
                            margin: 0
                        });
                        var ddbh_label = {
                            xtype: 'label',
                            id: 'ddbh_label',
                            margin: '0 0 0 10'
                        };
                       var khbh_label = {
                           xtype: 'label',
                           id: 'khbh_label',
                           margin: '0 0 0 10'
                       };
                        var bbar_r = '<div><a href="javascript:reload(2);">上一条</a>&nbsp;&nbsp;<a href="javascript:reload(1);">下一条</a></div>';
                        var buttombar = Ext.create('Ext.toolbar.Toolbar', {
                            items: ['<span>订单编号：</span>',ddbh_label,'<span>客户编号：</span>',khbh_label, '->', item_combo, cx_value, '<button type="button" onclick="loadByInput()" class="btn btn-primary btn-sm" id="btn_saveorder"><i class="fa fa-search"></i>&nbsp;载入</button>', bbar_r]
                        });

                //end
                        //var panel_bottom = Ext.create('Ext.panel.Panel', {
                        //    id: 'panel_buttom',
                        //    title: '<i class="fa fa-hand-o-right" aria-hidden="true"></i>&nbsp;订单信息<div style="float:right"><a href="javascript:reload(2);">上一条</a>&nbsp;&nbsp;<a href="javascript:reload(1);">下一条</a></div><div id="cx" style="float:right;width:300px;opacity:0.4;filter:alpha(opacity=100)"></div>',
                        //    border: 0,
                        //    tbar: buttombar,
                        //    region: 'center',
                        //    //collapsed: false,//让第二项展开，达到第一项收起的目的
                        //    items: [Ext.getCmp('panelbottom_1')]
                        //});
                        var panel_bottom = Ext.create('Ext.panel.Panel', {
                            id: 'panel_buttom',
                            title: '<i class="fa fa-hand-o-right" aria-hidden="true"></i>&nbsp;订单信息',
                            border: 0,
                            tbar: buttombar,
                            region: 'center',
                            //collapsed: false,//让第二项展开，达到第一项收起的目的
                            items: [Ext.getCmp('panelbottom_1')]
                        });
                        items.push(panel_bottom);
                        var viewport = Ext.create('Ext.container.Viewport', {
                            id: 'viewport',
                            //layout: 'accordion',
                            items: items
                        });

                 

                

                        loadform_data(id);
   
                        setHeight();
                        Ext.get(window).on('resize', function () { setHeight(); });


 

            }
        });

        function setHeight()
        {
            var V_height = Ext.getCmp('viewport').getSize().height;
            var B_height = Ext.getCmp('panel_buttom').getSize().height;
            Ext.getCmp('panel_top').setHeight(V_height - B_height);
            Ext.getCmp('paneltop_2').setHeight(V_height - B_height);
            
        }

        var menu_store = Ext.create('Ext.data.JsonStore', {
            fields: ['NAME', 'URL', 'busitypeid'],
            data: menu_js_data
        });
        var i = 0;
        $.each(menu_store.data.items, function (idx, item) {
            if (item.data.busitypeid == busitypeid) {
                i++
                if (i==1) {
                    $("#menu").append("<li style=\"background-color: #2a6496\" ref=\"" + item.data.URL + "\">" + item.data.NAME + "</li>")
                    $("#content").attr("src", item.data.URL);
                }
                
            else {
                $("#menu").append("<li ref=\"" + item.data.URL + "\">" + item.data.NAME + "</li>")
            }
            }
        });
        

        $("#menu li").on('click', function () {

            //alert($(this).html());
            $("#menu li").css("background-color", "");
            $(this).css("background-color", "#2a6496");
           
            $("#content").attr("src",$(this).attr("ref"));
        });
    });
    function loadByInput()
    {

        var item_combo_value = Ext.getCmp('item_combo').getValue();
        var cx_value = Ext.getCmp('cx_value').getValue();
        Ext.getCmp('cx_value').setValue("");
        if (Ext.String.trim(cx_value)=="") {
            Ext.MessageBox.alert("提示","请输入载入记录的查询条件！");
            return;
        }
        Ext.Ajax.request({
            url: "/EnterpriseOrder/LoadId_index",
            params: { busitypeid: busitypeid, item_combo_value: item_combo_value, cx_value: cx_value},
            success: function (response,option) {
                var json = Ext.decode(response.responseText);
                if (json.length!=0) {
                    loadform_data(json[0].ID);
                }
               
            }
        });
        

    }
    function reload(action)
    {

        if (action == "1") {
            rowIndex = eval(parseInt(rowIndex) + 1);
            if (rowIndex >= store_size) {
                rowIndex = 0;
                currentPage = parseInt(currentPage) + 1;
                //startrow = pageSize * parseInt(currentPage) > store_Trade.totalCount ? pageSize * (parseInt(currentPage) - 1) : pageSize * parseInt(currentPage);
                startrow = pageSize * (parseInt(currentPage) - 1);
                
                if (currentPage == max_page + 1) {
                    currentPage = currentPage - 1;
                    rowIndex = store_size - 1;
                    Ext.MessageBox.alert('提示', '当前为尾页！');
                    return;
                }
                //var params = { start: startrow, busitypeid: busitypeid };
                store_Trade.proxy.extraParams.start = startrow;
                store_Trade.load(function (records, operation, success) {
                    var recs = records[rowIndex];
                    loadform_data(recs.data.ID);
                    store_size = records.length;
                });

            

            }
            else {
                if (currentPage == max_page + 1) {
                    //currentPage = currentPage - 1;
                    rowIndex = store_size;
                    Ext.MessageBox.alert('提示', '当前为尾页！');
                }
                else
                {
                    loadform_data(store_Trade.data.items[rowIndex].data.ID);

                    

                }
                
            }
        } else {

            rowIndex = eval(parseInt(rowIndex) - 1);
            if (rowIndex < 0) {
                rowIndex = pageSize - 1;
                currentPage = parseInt(currentPage) - 1;
                startrow = pageSize * (parseInt(currentPage) - 1) < 0 ? 0 : pageSize * (parseInt(currentPage) - 1);
                

                if (currentPage == 0) {
                    currentPage = 1
                    Ext.MessageBox.alert('提示', '当前为首页！');
                    rowIndex = 0;
                    return;
                }
               // var params = { start: startrow, busitypeid: busitypeid };
                store_Trade.proxy.extraParams.start = startrow;
                store_Trade.load(function (records, operation, success) {
                    var recs = records[rowIndex];
                    loadform_data(recs.data.ID);
                    store_size = records.length;
                });
            }
            else {
                if (currentPage == 0) {
                    currentPage = 1
                    Ext.MessageBox.alert('提示', '当前为首页！');
                }
                else {
                   loadform_data(store_Trade.data.items[rowIndex].data.ID);
                  
                }
              
            }
        }
      

        //store_Trade.load(function (records, operation, success) {
        //    var recs = records[rowIndex];
        //    loadform_data(recs.data.ID);
        //});
        

        
    }
    function loadform_data(id)
    {
        Ext.Ajax.request({
        url: '/EnterPriseOrder/getTrack',
        params: { busitypeid: busitypeid, id: id },
        success: function (response, opts) {
            var data = Ext.decode(response.responseText);
            Ext.getCmp('panelbottom_1_1').getForm().setValues(data.json_order[0]);
            Ext.getCmp('panelbottom_1_3').getForm().setValues(data.json_order[0]);

            Ext.getCmp('khbh_label').setText(data.json_order[0].CODE);
            Ext.getCmp('ddbh_label').setText(data.json_order[0].CUSNO);

            if (Ext.getCmp('w_grid')) { Ext.getCmp('w_grid').store.loadData(data.json_container); }
            //if (typeof Ext.getCmp('TOTALNO_DIVIDENO') != "undefined") {
            if (Ext.getCmp('TOTALNO_DIVIDENO')) {
                var TOTALNO_DIVIDENO_value = data.json_order[0].TOTALNO + "_" + data.json_order[0].DIVIDENO
                Ext.getCmp('TOTALNO_DIVIDENO').setValue(TOTALNO_DIVIDENO_value);
            }

        }


    });
    
    
    }

    function form_ini()
    {
    
        var field_ID = Ext.create('Ext.form.field.Hidden', {
            name: 'ID'
        });
        var item_top = [];
        if (busitypeid == '11' || busitypeid == '10') {
        //申报方式
        var store_REPWAYNAME = Ext.create('Ext.data.JsonStore', {
            fields: ['CODE', 'NAME'],
            data: common_data_sbfs
        })
        var field_REPWAY = Ext.create('Ext.form.field.ComboBox', {
            name: 'REPWAYID',
            store: store_REPWAYNAME,
            hideTrigger: true,
            fieldLabel: '申报方式',
            displayField: 'NAME',
            valueField: 'CODE',
            readOnly: true
        })

        //报关申报单位
        var field_REPUNIT = Ext.create('Ext.form.field.Text', {
            name: 'REPUNITNAME',
            fieldLabel: '报关申报单位',
            readOnly: true
        })
        //委托时间
        var field_SUBMITTIME = Ext.create('Ext.form.field.Text', {
            name: 'SUBMITTIME',
            fieldLabel: '委托日期',
            readOnly: true
        })

        //进口口岸
        //var field_PORTCODE = Ext.create('Ext.form.field.Text', {
        //    name: 'PORTCODE',
        //    fieldLabel: '进/出口岸',
        //    readOnly: true
        //});

        store_PORTCODE
        var store_PORTCODE = Ext.create("Ext.data.JsonStore", {
            fields: ["CODE", "NAME"],
            data:common_data_sbgq
        });
        var field_PORTCODE = Ext.create('Ext.form.field.ComboBox', {
            name: 'PORTCODE',
            store: store_PORTCODE,
            hideTrigger: true,
            fieldLabel: '进/出口岸',
            displayField: 'NAME',
            valueField: 'CODE',
            readOnly: true
        });


        //经营单位
        var field_BUSIUNIT = Ext.create('Ext.form.field.Text', {
            name: 'BUSIUNITNAME',
            fieldLabel: '经营单位',
            readOnly: true
        });

            /*
        //总单号
        var field_TOTALNO = Ext.create('Ext.form.field.Text', {
            name: 'TOTALNO', margin: 0,
            readOnly: true,flex:0.5
        });

        //分单号
        var field_DIVIDENO = Ext.create('Ext.form.field.Text', {
            name: 'DIVIDENO', margin: 0,
            readOnly: true,flex:0.5
        });
        

            //总分单号
        var container_TOTALNO_DIVIDENO = {
            xtype: 'fieldcontainer',
            fieldLabel: '总分单号',
            layout: 'hbox',
            items: [field_TOTALNO, field_DIVIDENO],
            columnWidth: .4,
        }
        */
        var field_TOTALNO_DIVIDENO = Ext.create('Ext.form.field.Text', {
            id:'TOTALNO_DIVIDENO',
            name: 'TOTALNO_DIVIDENO', margin: 0,
            readOnly: true,
            flex:1
        });
        var container_TOTALNO_DIVIDENO = {
            xtype: 'fieldcontainer',
            fieldLabel: '总分单号',
            layout: 'hbox',
            items: [field_TOTALNO_DIVIDENO],
            columnWidth: .4,
        }
        //件数/包装
        var field_GOODSNUM = Ext.create('Ext.form.field.Text', {
            name: 'GOODSNUM',
            flex: .5,
            margin: 0,
            readOnly: true
        });
        var store_PACKKINDNAME = Ext.create('Ext.data.JsonStore', {
            fields: ['CODE', 'NAME'],
            //data: common_data_bzzl
        })
        var combo_PACKKINDNAME = Ext.create('Ext.form.field.ComboBox', {
            name: 'PACKKIND',
            hideTrigger: true,
            store: store_PACKKINDNAME,
            displayField: 'NAME',
            valueField: 'CODE',
            margin: 0,
            flex: .5,
            readOnly: true
        })
        var field_quanpackage = {
            xtype: 'fieldcontainer',
            fieldLabel: '件数/包装',
            layout: 'hbox',
            items: [field_GOODSNUM, combo_PACKKINDNAME]
        }

        //毛重/净重
        var field_weight = {
            xtype: 'fieldcontainer',
            fieldLabel: '毛重/净重',
            layout: 'hbox',
            items: [
                {
                    id: 'GOODSGW', name: 'GOODSGW', xtype: 'numberfield', flex: .5, margin: 0, readOnly: true
                },
               {
                   id: 'GOODSNW', name: 'GOODSNW', xtype: 'numberfield', flex: .5, margin: 0, readOnly: true
               }]
        }
        //合同号
        var field_contractno = Ext.create('Ext.form.field.Text', {
            name: 'CONTRACTNO',
            fieldLabel: '合同号',
            readOnly: true
        });
        //对应号
        var field_repno = Ext.create('Ext.form.field.Text', {
            name: 'REPNO',
            fieldLabel: '对应号',
            readOnly: true
        });
            //委托单位
        var field_CUSTOMERNAME = Ext.create('Ext.form.field.Text', {
            name: 'CUSTOMERNAME',
            fieldLabel: '委托单位',
            readOnly: true
        });
            //委托人员
        var field_SUBMITUSERNAME = Ext.create('Ext.form.field.Text', {
            name: 'SUBMITUSERNAME',
            fieldLabel: '委托人员',
            readOnly: true
        });
            //转关预录号
        var field_TURNPRENO = Ext.create('Ext.form.field.Text', {
            name: 'TURNPRENO',
            fieldLabel: '转关预录号',
            readOnly: true
        });
        //贸易方式
        var store_myfs = Ext.create('Ext.data.JsonStore', {
            fields: ['CODE', 'NAME'],
            data: common_data_myfs
        })
        var combo_myfs = Ext.create('Ext.form.field.ComboBox', {//贸易方式
            id: 'combo_myfs',
            name: 'TRADEWAYCODES',
            fieldLabel: '贸易方式',
            store: store_myfs,
            displayField: 'NAME',
            valueField: 'CODE',
            readOnly: true

        })
        item_top.push({ layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [field_contractno, field_repno, field_PORTCODE, field_BUSIUNIT, field_REPUNIT] },
                    { layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [combo_myfs, field_REPWAY, container_TOTALNO_DIVIDENO, field_SUBMITTIME] },
                    { layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [field_quanpackage, field_weight, field_CUSTOMERNAME, field_SUBMITUSERNAME, field_TURNPRENO] });
        }

        if (busitypeid == '21' || busitypeid == '20') {
            //申报方式
            var store_REPWAYNAME = Ext.create('Ext.data.JsonStore', {
                fields: ['CODE', 'NAME'],
                data: common_data_sbfs
            })
            var field_REPWAY = Ext.create('Ext.form.field.ComboBox', {
                name: 'REPWAYID',
                store: store_REPWAYNAME,
                hideTrigger: true,
                fieldLabel: '申报方式',
                displayField: 'NAME',
                valueField: 'CODE',
                readOnly: true
            })

            //报关申报单位
            var field_REPUNIT = Ext.create('Ext.form.field.Text', {
                name: 'REPUNITNAME',
                fieldLabel: '报关申报单位',
                readOnly: true
            })
            //委托时间
            var field_SUBMITTIME = Ext.create('Ext.form.field.Text', {
                name: 'SUBMITTIME',
                fieldLabel: '委托日期',
                readOnly: true
            })

            //进口口岸
            //var field_PORTCODE = Ext.create('Ext.form.field.Text', {
            //    name: 'PORTCODE',
            //    fieldLabel: '进/出口岸',
            //    readOnly: true
            //});
            store_PORTCODE
            var store_PORTCODE = Ext.create("Ext.data.JsonStore", {
                fields: ["CODE", "NAME"],
                data: common_data_sbgq
            });
            var field_PORTCODE = Ext.create('Ext.form.field.ComboBox', {
                name: 'PORTCODE',
                store: store_PORTCODE,
                hideTrigger: true,
                fieldLabel: '进/出口岸',
                displayField: 'NAME',
                valueField: 'CODE',
                readOnly: true
            })
            //经营单位
            var field_BUSIUNIT = Ext.create('Ext.form.field.Text', {
                name: 'BUSIUNITNAME',
                fieldLabel: '经营单位',
                readOnly: true
            });

            //船名/航次
            var field_ship = {
                xtype: 'fieldcontainer',
                fieldLabel: '船名/航次',
                layout: 'hbox',
                items: [
                    {
                        id: 'SHIPNAME', name: 'SHIPNAME', xtype: 'textfield', flex: .5, tabIndex: 16, margin: 0,
                        allowBlank: false, blankText: '不能为空!', listeners: {
                            focus: function (tf, The, options) {
                                tf.clearInvalid();
                            }
                        }
                    },
                    {
                        id: 'FILGHTNO', name: 'FILGHTNO', xtype: 'textfield', flex: .5, tabIndex: 17, margin: 0,
                        allowBlank: false, blankText: '不能为空!', listeners: {
                            focus: function (tf, The, options) {
                                tf.clearInvalid();
                            }
                        }
                    }]
            }

            //分单号
            var field_LADINGBILLNO = Ext.create('Ext.form.field.Text', {
                name: 'SECONDLADINGBILLNO',
                fieldLabel: '提单号',
                readOnly: true
            });

            //件数/包装
            var field_GOODSNUM = Ext.create('Ext.form.field.Text', {
                name: 'GOODSNUM',
                flex: .5,
                margin: 0,
                readOnly: true
            });
            var store_PACKKINDNAME = Ext.create('Ext.data.JsonStore', {
                fields: ['CODE', 'NAME'],
                //data: common_data_bzzl
            })
            var combo_PACKKINDNAME = Ext.create('Ext.form.field.ComboBox', {
                name: 'PACKKIND',
                hideTrigger: true,
                store: store_PACKKINDNAME,
                displayField: 'NAME',
                valueField: 'CODE',
                margin: 0,
                flex: .5,
                readOnly: true
            })
            var field_quanpackage = {
                xtype: 'fieldcontainer',
                fieldLabel: '件数/包装',
                layout: 'hbox',
                items: [field_GOODSNUM, combo_PACKKINDNAME]
            }

            //毛重/净重
            var field_weight = {
                xtype: 'fieldcontainer',
                fieldLabel: '毛重/净重',
                layout: 'hbox',
                items: [
                    {
                        id: 'GOODSGW', name: 'GOODSGW', xtype: 'numberfield', flex: .5, margin: 0, readOnly: true
                    },
                   {
                       id: 'GOODSNW', name: 'GOODSNW', xtype: 'numberfield', flex: .5, margin: 0, readOnly: true
                   }]
            }
            //合同号
            var field_contractno = Ext.create('Ext.form.field.Text', {
                name: 'CONTRACTNO',
                fieldLabel: '合同号',
                readOnly: true
            });
            //对应号
            var field_repno = Ext.create('Ext.form.field.Text', {
                name: 'REPNO',
                fieldLabel: '对应号',
                readOnly: true
            });
            //贸易方式
            var store_myfs = Ext.create('Ext.data.JsonStore', {
                fields: ['CODE', 'NAME'],
                data: common_data_myfs
            })
            var combo_myfs = Ext.create('Ext.form.field.ComboBox', {//贸易方式
                id: 'combo_myfs',
                name: 'TRADEWAYCODES',
                fieldLabel: '贸易方式',
                store: store_myfs,
                displayField: 'NAME',
                valueField: 'CODE',
                readOnly: true

            })

            //委托单位
            var field_CUSTOMERNAME = Ext.create('Ext.form.field.Text', {
                name: 'CUSTOMERNAME',
                fieldLabel: '委托单位',
                readOnly: true
            });
            //委托人员
            var field_SUBMITUSERNAME = Ext.create('Ext.form.field.Text', {
                name: 'SUBMITUSERNAME',
                fieldLabel: '委托人员',
                readOnly: true
            });
            //货物类型
            var store_GOODSTYPEID = Ext.create('Ext.data.JsonStore', {
                fields: ['CODE', 'NAME'],
                data: hwlx_js_data
            })
            var combo_GOODSTYPEID = Ext.create('Ext.form.field.ComboBox', {
                name: 'GOODSTYPEID',
                store: store_GOODSTYPEID,
                fieldLabel: '货物类型',
                displayField: 'NAME',
                valueField: 'CODE',
                readOnly:true
            })
            item_top.push({ layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [field_contractno, field_repno, field_PORTCODE, field_BUSIUNIT, field_REPUNIT] },
                        { layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [combo_myfs, field_REPWAY, field_ship, field_LADINGBILLNO, field_SUBMITTIME] },
                        { layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [field_quanpackage, field_weight, combo_GOODSTYPEID, field_CUSTOMERNAME, field_SUBMITUSERNAME] });

        }

           var label_busiinfo = {
            xtype: 'label',
            margin: '0 0 5 5',
            html: '<h4 style="margin-top:2px;margin-bottom:2px"><span class="label label-default"><i class="fa fa-chevron-circle-down" style="font-size:inherit"></i>&nbsp;货况跟踪</span></h4>'
        }

        var field_ORDERCODE = Ext.create('Ext.form.field.Hidden', {
            name: 'CODE',
        });

        var itemsAll = [field_ORDERCODE], itemsGrid = [];

        if (busitypeid == '11' || busitypeid == '10') {


            var field_COL001 = Ext.create('Ext.form.field.Text', {
                name: 'COL001',
                fieldLabel: '航班'
            });
            //var field_COL002 = Ext.create('Ext.form.field.Text', {
            //    name: 'COL002',
            //    fieldLabel: '日期',
            //    readOnly: true
            //});
            var field_COL002 = Ext.create('Ext.form.field.Date', {
                name: 'COL002',
                margin: 0,
                flex: 1,
                fieldLabel: '日期',
                emptyText: '日期',
                //readOnly: true,
                format: 'Y-m-d'
            })
            var field_COL003 = Ext.create('Ext.form.field.Text', {
                name: 'COL003',
                fieldLabel: '始发站'
            });
            var field_COL004 = Ext.create('Ext.form.field.Text', {
                name: 'COL004',
                fieldLabel: '到达站'
            });
            var field_COL005 = Ext.create('Ext.form.field.Date', {
                name: 'COL005',
                fieldLabel: 'ATD',
                //emptyText: '预计到达时间',
                format: 'Y-m-d'
            });
            var field_COL006 = Ext.create('Ext.form.field.Date', {
                name: 'COL006',
                fieldLabel: 'ATA',
               //emptyText: '实际到达时间',
                format: 'Y-m-d'
            });
            var manifest_check
            if (busitypeid == '11') {
                manifest_check = Ext.create('Ext.form.Checkbox', {
                    id: 'manifest_check',
                    name: 'MANIFEST_STORAGE',
                    fieldLabel: '舱单入库',
                    inputValue: '1',
                    labelAlign: "right"
                });
            }
          
            itemsAll.push({ layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [label_busiinfo] },
                          { layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [field_COL001, field_COL002, field_COL003, field_COL004, field_COL005] },
                          { layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [field_COL006, manifest_check] });


        }
        else {
            var w_gridstore = Ext.create('Ext.data.JsonStore', {
                id: 'w_gridstore',
                fields: ['ID', 'ORDERCODE', 'CONTAINERORDER', 'CONTAINERNO', 'CONTAINERSIZEE', 'CONTAINERSIZE', 'CONTAINERWEIGHT', 'CONTAINERTYPE',
                    'HSCODE', 'CONTSPECIFICATIONS', 'FORMATNAME', 'CDCARNO', 'CDCARNAME', 'UNITNO', 'ELESHUT']
            })
            var w_grid = Ext.create('Ext.grid.Panel', {
                id: 'w_grid',
                store: w_gridstore,
                selModel: { selType: 'checkboxmodel' },
                height: 100,
                columns: [
                    { header: '集装箱号', dataIndex: 'CONTAINERNO', width: 100 },
                    { header: '尺寸', dataIndex: 'CONTAINERSIZE', width: 50 },
                    { header: '规格', dataIndex: 'CONTAINERSIZEE', width: 50 },
                    { header: '自重', dataIndex: 'CONTAINERWEIGHT', width: 60 },
                    { header: '集装箱种类', dataIndex: 'CONTAINERTYPE', width: 100 },
                    { header: 'HS编码', dataIndex: 'HSCODE', width: 90 },
                    { header: '集装箱规格', dataIndex: 'FORMATNAME', width: 100 },
                    { header: '报关车号', dataIndex: 'CDCARNO', width: 85 },//实际显示的是白卡号
                    { header: '报关车名', dataIndex: 'CDCARNAME', width: 85 },//中文牌照信息
                    { header: '车队名称', dataIndex: 'UNITNO', flex: 1 },
                    { header: '电子关锁号', dataIndex: 'ELESHUT', width: 90 }
                ]
            });
            
            itemsGrid.push(w_grid);

            var field_COL001 = Ext.create('Ext.form.field.Date', {
                name: 'COL001',
                fieldLabel: '靠港时间',
                margin: 0,
                flex: 1,
                fieldLabel: '日期',
                emptyText: '日期',
                format: 'Y-m-d'
            })
            itemsAll.push(
                          { layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [label_busiinfo] },
                          { layout: 'column', height: 30, margin: '5 0 0 0', border: 0, items: [field_COL001, manifest_check] });
        }


        var bbar_r = '<div class="btn-group">'
              + '<button type="button" onclick="save()" class="btn btn-primary btn-sm" id="btn_saveorder"><i class="fa fa-floppy-o"></i>&nbsp;保存</button>'
              + '</div>';
        var buttombar = Ext.create('Ext.toolbar.Toolbar', {
            items: ['<span style="color:red">备注：ATD:预计到达时间  ATA实际到达时间</span>', '->', bbar_r]
        })

        var panelbottom_1_1 = Ext.create('Ext.form.Panel', {
            id: 'panelbottom_1_1',
           // region: 'center',
            border: 0,
            fieldDefaults: {
                margin: '0 5 10 0',
                labelWidth: 80,
                columnWidth: .20,
                labelAlign: 'right'
            },
            items:item_top

        });

        var panelbottom_1_3 = Ext.create('Ext.form.Panel', {
            id: 'panelbottom_1_3',
            bbar: buttombar,
            // region: 'center',
            border: 0,
            fieldDefaults: {
                margin: '0 5 10 0',
                labelWidth: 80,
                columnWidth: .20,
                labelAlign: 'right'
            },
            items: itemsAll
        });
        var panelbottom_1_2 = Ext.create('Ext.panel.Panel', {
            id: 'panelbottom_1_2',
            // region: 'center',
            border: 0,
            items: itemsGrid
        });

        var panelbottom_1 = Ext.create('Ext.panel.Panel', {
            id: 'panelbottom_1',
            border: 0,
            region: 'center',
            items: [panelbottom_1_1, panelbottom_1_2, panelbottom_1_3]
        });

  

    }

    function save() {

        var data = Ext.encode(Ext.getCmp('panelbottom_1_3').getForm().getValues());
        var mask = new Ext.LoadMask(Ext.getBody(), { msg: "数据保存中，请稍等..." });
        mask.show();
        Ext.Ajax.request({
            url: "/EnterpriseOrder/GoodsTrackSave",
            params: { data: data},
            success: function (response, option) {
                mask.hide();
                var data = Ext.decode(response.responseText);
                if (data.success) {
                    Ext.MessageBox.alert("提示", "保存成功！");
                }
                else {
                    Ext.MessageBox.alert("提示", "保存失败！");
                }
            }

        });
    }


</script>
<ul id="menu">
    
</ul>
<iframe id="content" name="frame" width=100% height=100% security="restricted" sandbox="allow-scripts  allow-forms allow-same-origin" />